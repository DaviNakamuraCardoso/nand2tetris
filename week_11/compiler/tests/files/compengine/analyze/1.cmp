<class>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier> main </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<varDec>
				<keyword> var </keyword>
				<identifier> Person </identifier>
				<identifier> p </identifier>
				<symbol> ; </symbol>
			</varDec>
			<statements>
				<letStatement>
					<keyword> let </keyword>
					<identifier> p </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<subroutineCall>
								<identifier> Person </identifier>
								<symbol> . </symbol>
								<identifier> new </identifier>
								<symbol> ( </symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant> 18 </integerConstant>
										</term>
									</expression>
									<symbol> , </symbol>
									<expression>
										<term>
											<keyword> true </keyword>
										</term>
									</expression>
									<symbol> , </symbol>
									<expression>
										<term>
											<stringConstant> Davi </stringConstant>
										</term>
									</expression>
								</expressionList>
								<symbol> ) </symbol>
							</subroutineCall>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<doStatement>
					<keyword> do </keyword>
					<subroutineCall>
						<identifier> p </identifier>
						<symbol> . </symbol>
						<identifier> hello </identifier>
						<symbol> ( </symbol>
						<expressionList>
						</expressionList>
						<symbol> ) </symbol>
					</subroutineCall>
					<symbol> ; </symbol>
				</doStatement>
				<returnStatement>
					<keyword> return </keyword>
					<symbol> ; </symbol>
				</returnStatement>
			</statements>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
