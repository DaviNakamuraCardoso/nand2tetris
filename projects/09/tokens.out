class
Game
{
field
boolean
paused,
over,
quit;
field
Player
player;
field
Matrix
matrix;
constructor
Game
new(Player
p,
Matrix
m)
{
let
paused
=
false;
let
over
=
false;
let
player
=
p;
let
matrix
=
m;
return
this;
}
method
boolean
isPaused()
{
return
paused;
}
method
boolean
isOver()
{
return
over;
}
method
Player
getPlayer()
{
return
player;
}
method
Matrix
getMatrix()
{
return
matrix;
}
method
void
pause()
{
let
paused
=
true;
return;
}
method
void
play()
{
let
paused
=
false;
return;
}
method
void
end()
{
let
over
=
true;
return;
}
method
void
start()
{let
over
=
false;
return;
}
method
void
updateGame()
{
while
(~over)
{
do
update();
do
render();
}
return;
}
method
void
update()
{
var
char
key;
let
key
=
Keyboard.keyPressed();
do
switch(key);
return;
}
method
void
render()
{
do
player.render();
do
matrix.render();
return;
}
method
void
switch(char
key)
{
if
(key
=
81)
{
do
end();
return;
}
if
(key
=
82)
{
do
end();
return;
}
do
updateComponents();
return;
}
method
void
updateComponents()
{
do
player.update();
do
matrix.update();
return;
}
method
void
print()
{
return;
}
}
