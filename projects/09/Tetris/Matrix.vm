function Matrix.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
push argument 1
call Matrix.buildMatrix 2
pop this 3
push constant 0
pop this 2
push constant 0
pop this 4
push pointer 0
return
function Matrix.getWidth 0
push argument 0
pop pointer 0
push this 0
return
function Matrix.getHeight 0
push argument 0
pop pointer 0
push this 1
return
function Matrix.buildMatrix 2
push argument 0
call Array.new 1
pop local 0
label WHILE_EXP0
push local 1
push argument 0
lt
not
if-goto WHILE_END0
push local 1
push local 0
add
push argument 1
call Matrix.buildArray 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Matrix.buildArray 2
push argument 0
call Array.new 1
pop local 0
label WHILE_EXP0
push local 1
push argument 0
lt
not
if-goto WHILE_END0
push local 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Matrix.getRow 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Matrix.isSafe 3
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Matrix.ArrayOutOfBoundsError 0
pop temp 0
label IF_FALSE0
push argument 1
push this 3
add
pop pointer 1
push that 0
pop local 0
push local 0
return
function Matrix.render 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push pointer 0
call Matrix.getWidth 1
push constant 1
sub
lt
not
if-goto WHILE_END0
push pointer 0
push local 0
call Matrix.renderColumn 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Matrix.renderColumn 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push pointer 0
call Matrix.getHeight 1
push constant 1
sub
lt
not
if-goto WHILE_END0
push pointer 0
push argument 1
push local 0
call Matrix.getCell 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
not
call Screen.setColor 1
pop temp 0
label IF_END0
push argument 1
push constant 8
call Math.multiply 2
push local 0
push constant 8
call Math.multiply 2
push argument 1
push constant 1
add
push constant 8
call Math.multiply 2
push local 0
push constant 1
add
push constant 8
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Matrix.update 0
push argument 0
pop pointer 0
push this 2
push constant 1
add
pop this 2
push pointer 0
call Matrix.updateBlocks 1
pop temp 0
push constant 0
return
function Matrix.updateBlocks 0
push argument 0
pop pointer 0
push this 2
push constant 200
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 2
push pointer 0
call Matrix.createBlock 1
pop temp 0
label IF_FALSE0
push pointer 0
call Matrix.updateAllBlocks 1
pop temp 0
push constant 0
return
function Matrix.getCell 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Matrix.getRow 3
pop local 1
push argument 2
push local 1
add
pop pointer 1
push that 0
pop local 0
push local 0
return
function Matrix.setCell 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call Matrix.getRow 3
pop local 0
push argument 2
push local 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Matrix.isSafe 0
push argument 0
pop pointer 0
push argument 1
push this 0
gt
push argument 1
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 2
push this 1
gt
push argument 2
push constant 0
lt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 1
return
function Matrix.print 0
push argument 0
pop pointer 0
push constant 0
return
function Matrix.createBlock 2
push argument 0
pop pointer 0
push constant 73
push pointer 0
call Block.new 2
pop local 0
push local 0
push constant 0
call List.new 2
pop local 1
push this 4
push local 1
call List.add 2
pop temp 0
push constant 0
return
function Matrix.updateAllBlocks 2
push argument 0
pop pointer 0
push this 4
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call List.getData 1
pop local 1
push local 1
call Block.render 1
pop temp 0
push local 0
call List.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Matrix.ArrayOutOfBoundsError 0
push constant 19
call String.new 1
push constant 65
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 115
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 2
call Sys.error 1
pop temp 0
push constant 0
return
