<class>
	<keyword> class </keyword>
	<identifier> Main </identifier>
	<symbol> { </symbol>
	<classVarDec>
		<keyword> static </keyword>
		<keyword> boolean </keyword>
		<identifier> b </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> static </keyword>
		<keyword> int </keyword>
		<identifier> i </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> static </keyword>
		<keyword> char </keyword>
		<identifier> c </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> field </keyword>
		<keyword> boolean </keyword>
		<identifier> fb </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> field </keyword>
		<keyword> int </keyword>
		<identifier> fi </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> field </keyword>
		<keyword> char </keyword>
		<identifier> fc </identifier>
		<symbol> ; </symbol>
	</classVarDec>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier> main </identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<varDec>
				<keyword> var </keyword>
				<keyword> char </keyword>
				<identifier> c </identifier>
				<symbol> ; </symbol>
			</varDec>
			<statements>
				<letStatement>
					<keyword> let </keyword>
					<identifier> c </identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<integerConstant> 'C' </integerConstant>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<doStatement>
					<keyword> do </keyword>
					<subroutineCall>
						<identifier> Output </identifier>
						<symbol> . </symbol>
						<identifier> printString </identifier>
						<symbol> ( </symbol>
						<expressionList>
							<expression>
								<term>
									<stringConstant> Howdy, World! </stringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol> ) </symbol>
					</subroutineCall>
					<symbol> ; </symbol>
				</doStatement>
				<returnStatement>
					<keyword> return </keyword>
					<symbol> ; </symbol>
				</returnStatement>
			</statements>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
